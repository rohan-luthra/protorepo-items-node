// source: item.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.item.Addon', null, global);
goog.exportSymbol('proto.item.AddonItem', null, global);
goog.exportSymbol('proto.item.Id', null, global);
goog.exportSymbol('proto.item.Item', null, global);
goog.exportSymbol('proto.item.RestId', null, global);
goog.exportSymbol('proto.item.SpecialCategory', null, global);
goog.exportSymbol('proto.item.Timings', null, global);
goog.exportSymbol('proto.item.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.AddonItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.AddonItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.AddonItem.displayName = 'proto.item.AddonItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Addon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.item.Addon.repeatedFields_, null);
};
goog.inherits(proto.item.Addon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Addon.displayName = 'proto.item.Addon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.item.Item.repeatedFields_, null);
};
goog.inherits(proto.item.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Item.displayName = 'proto.item.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Id.displayName = 'proto.item.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.RestId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.RestId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.RestId.displayName = 'proto.item.RestId';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.AddonItem.prototype.toObject = function(opt_includeInstance) {
  return proto.item.AddonItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.AddonItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.AddonItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    available: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.AddonItem}
 */
proto.item.AddonItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.AddonItem;
  return proto.item.AddonItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.AddonItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.AddonItem}
 */
proto.item.AddonItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.AddonItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.AddonItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.AddonItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.AddonItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.item.AddonItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.AddonItem} returns this
 */
proto.item.AddonItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.AddonItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.AddonItem} returns this
 */
proto.item.AddonItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float price = 3;
 * @return {number}
 */
proto.item.AddonItem.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.item.AddonItem} returns this
 */
proto.item.AddonItem.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool available = 4;
 * @return {boolean}
 */
proto.item.AddonItem.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.item.AddonItem} returns this
 */
proto.item.AddonItem.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.item.AddonItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.AddonItem} returns this
 */
proto.item.AddonItem.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.Addon.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.Addon.prototype.toObject = function(opt_includeInstance) {
  return proto.item.Addon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.Addon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Addon.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    restId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    addonItemList: jspb.Message.toObjectList(msg.getAddonItemList(),
    proto.item.AddonItem.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Addon}
 */
proto.item.Addon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Addon;
  return proto.item.Addon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Addon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Addon}
 */
proto.item.Addon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestId(value);
      break;
    case 5:
      var value = new proto.item.AddonItem;
      reader.readMessage(value,proto.item.AddonItem.deserializeBinaryFromReader);
      msg.addAddonItem(value);
      break;
    case 6:
      var value = /** @type {!proto.item.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Addon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.Addon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Addon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Addon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRestId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddonItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.item.AddonItem.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.item.Addon.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Addon} returns this
 */
proto.item.Addon.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.Addon.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Addon} returns this
 */
proto.item.Addon.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.item.Addon.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Addon} returns this
 */
proto.item.Addon.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string rest_id = 4;
 * @return {string}
 */
proto.item.Addon.prototype.getRestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Addon} returns this
 */
proto.item.Addon.prototype.setRestId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated AddonItem addon_item = 5;
 * @return {!Array<!proto.item.AddonItem>}
 */
proto.item.Addon.prototype.getAddonItemList = function() {
  return /** @type{!Array<!proto.item.AddonItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.item.AddonItem, 5));
};


/**
 * @param {!Array<!proto.item.AddonItem>} value
 * @return {!proto.item.Addon} returns this
*/
proto.item.Addon.prototype.setAddonItemList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.item.AddonItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.AddonItem}
 */
proto.item.Addon.prototype.addAddonItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.item.AddonItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.Addon} returns this
 */
proto.item.Addon.prototype.clearAddonItemList = function() {
  return this.setAddonItemList([]);
};


/**
 * optional Type __type = 6;
 * @return {!proto.item.Type}
 */
proto.item.Addon.prototype.getType = function() {
  return /** @type {!proto.item.Type} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.item.Type} value
 * @return {!proto.item.Addon} returns this
 */
proto.item.Addon.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.Item.repeatedFields_ = [10,11,12,13,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.item.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    ratings: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    ratingsCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    orderCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    subCategoryId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    splCategoriesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    imagesList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    timingsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    priority: jspb.Message.getFieldWithDefault(msg, 14, 0),
    available: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    veg: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    addonsList: jspb.Message.toObjectList(msg.getAddonsList(),
    proto.item.Addon.toObject, includeInstance),
    restId: jspb.Message.getFieldWithDefault(msg, 18, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Item}
 */
proto.item.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Item;
  return proto.item.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Item}
 */
proto.item.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRatings(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingsCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderCount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubCategoryId(value);
      break;
    case 10:
      var value = /** @type {!Array<!proto.item.SpecialCategory>} */ (reader.readPackedEnum());
      msg.setSplCategoriesList(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 13:
      var value = /** @type {!Array<!proto.item.Timings>} */ (reader.readPackedEnum());
      msg.setTimingsList(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVeg(value);
      break;
    case 17:
      var value = new proto.item.Addon;
      reader.readMessage(value,proto.item.Addon.deserializeBinaryFromReader);
      msg.addAddons(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestId(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 20:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getRatings();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getRatingsCount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getOrderCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCategoryId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSubCategoryId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSplCategoriesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      10,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getTimingsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      13,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getVeg();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getAddonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.item.Addon.serializeBinaryToWriter
    );
  }
  f = message.getRestId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.item.Item.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.item.Item.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float price = 4;
 * @return {number}
 */
proto.item.Item.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float ratings = 5;
 * @return {number}
 */
proto.item.Item.prototype.getRatings = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setRatings = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 ratings_count = 6;
 * @return {number}
 */
proto.item.Item.prototype.getRatingsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setRatingsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 order_count = 7;
 * @return {number}
 */
proto.item.Item.prototype.getOrderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setOrderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string category_id = 8;
 * @return {string}
 */
proto.item.Item.prototype.getCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string sub_category_id = 9;
 * @return {string}
 */
proto.item.Item.prototype.getSubCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setSubCategoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated SpecialCategory spl_categories = 10;
 * @return {!Array<!proto.item.SpecialCategory>}
 */
proto.item.Item.prototype.getSplCategoriesList = function() {
  return /** @type {!Array<!proto.item.SpecialCategory>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<!proto.item.SpecialCategory>} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setSplCategoriesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.item.SpecialCategory} value
 * @param {number=} opt_index
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.addSplCategories = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearSplCategoriesList = function() {
  return this.setSplCategoriesList([]);
};


/**
 * repeated string tags = 11;
 * @return {!Array<string>}
 */
proto.item.Item.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated string images = 12;
 * @return {!Array<string>}
 */
proto.item.Item.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * repeated Timings timings = 13;
 * @return {!Array<!proto.item.Timings>}
 */
proto.item.Item.prototype.getTimingsList = function() {
  return /** @type {!Array<!proto.item.Timings>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<!proto.item.Timings>} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setTimingsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {!proto.item.Timings} value
 * @param {number=} opt_index
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.addTimings = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearTimingsList = function() {
  return this.setTimingsList([]);
};


/**
 * optional int32 priority = 14;
 * @return {number}
 */
proto.item.Item.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool available = 15;
 * @return {boolean}
 */
proto.item.Item.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool veg = 16;
 * @return {boolean}
 */
proto.item.Item.prototype.getVeg = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setVeg = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * repeated Addon addons = 17;
 * @return {!Array<!proto.item.Addon>}
 */
proto.item.Item.prototype.getAddonsList = function() {
  return /** @type{!Array<!proto.item.Addon>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.item.Addon, 17));
};


/**
 * @param {!Array<!proto.item.Addon>} value
 * @return {!proto.item.Item} returns this
*/
proto.item.Item.prototype.setAddonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.item.Addon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.Addon}
 */
proto.item.Item.prototype.addAddons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.item.Addon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearAddonsList = function() {
  return this.setAddonsList([]);
};


/**
 * optional string rest_id = 18;
 * @return {string}
 */
proto.item.Item.prototype.getRestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setRestId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.item.Item.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.item.Item} returns this
*/
proto.item.Item.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.Item.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 20;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.item.Item.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 20));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.item.Item} returns this
*/
proto.item.Item.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.Item.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.item.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Id}
 */
proto.item.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Id;
  return proto.item.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Id}
 */
proto.item.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.item.Id.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.Id} returns this
 */
proto.item.Id.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.RestId.prototype.toObject = function(opt_includeInstance) {
  return proto.item.RestId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.RestId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.RestId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.RestId}
 */
proto.item.RestId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.RestId;
  return proto.item.RestId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.RestId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.RestId}
 */
proto.item.RestId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.RestId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.RestId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.RestId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.RestId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.item.RestId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.item.RestId} returns this
 */
proto.item.RestId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.item.Type = {
  CHECKBOX: 0,
  RADIO_BUTTON: 1,
  SLIDER: 2
};

/**
 * @enum {number}
 */
proto.item.Timings = {
  BREAKFAST: 0,
  LUNCH: 1,
  SNACKS: 2,
  DINNER: 3
};

/**
 * @enum {number}
 */
proto.item.SpecialCategory = {
  CHEFS_SPECIAL: 0,
  TODAYS_SPECIAL: 1
};

goog.object.extend(exports, proto.item);
